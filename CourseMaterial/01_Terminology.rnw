\documentclass{article}
\input{c:/aaaWork/zGnrlLatex/GnrlPreamble}
\input{c:/aaaWork/zGnrlLatex/justRPreamble}
\hypersetup{pdftitle = Midwest2013 HO - Terminology}

\begin{document}
  \titleRHO{R Terminology}{Midwest (Wichita)}{Dec}

<<setup,echo=FALSE,include=FALSE>>=
source("c:/aaaWork/zGnrlLatex/knitr_setup.R")
@

<<results='hide', message=FALSE, warning=FALSE>>=
library(FSA)       # Subset, view, lencat, mrClosed
@

\subsection{Very Basics}
\subsubsection*{Expressions \& Assignments}
<<>>=
3+4*2
res <- 3+4*2
res
@
\begin{center}
  \includegraphics[width=2in]{Figs/Workspace1.png}
\end{center}

\subsubsection*{Functions \& Arguments}
<<>>=
sqrt(17)
( res1 <- sqrt(17) )
@
\begin{center}
  \includegraphics[width=2in]{Figs/Workspace2.png}
\end{center}

<<>>=
dat <- c(3,6,8,3,5,6,2,7,6,8,2,10)
mean(dat)
mean(dat,trim=0.1)
@

\subsubsection*{Types of Functions}
<<>>=
mr1 <- mrClosed(346,184,49)
summary(mr1)
confint(mr1)
@

\subsubsection*{Vectors, Data Types, \& Dataframes}
<<>>=
( numSpec <- c(4,8,9,3) )
( lake <- c("Star","Twin","Long","Deep") )
( springFed <- c(TRUE,FALSE,FALSE,TRUE) )
( maxDepth <- c(6.5,7.8,3.8,25.6) )
@

<<>>=
( df <- data.frame(lake,numSpec,maxDepth,springFed) )
str(df)
@
\begin{center}
  \includegraphics[width=2in]{Figs/Workspace3.png}
\end{center}

\subsection{Dataframes from External Files}
\subsubsection*{Working Directory}
You must change (i.e., ``set'') the working directory in R to where your external data file is located.  The easiest way to do this is to save your R script file in the same directory that holds your external data file.  If you do this, then you can select the ``Session'' menu, ``Set Working Directory'' submenu, and ``To Source File Location'' item to set the working directory.  This will send a \R{setwd()} command to the \emph{Console} pane.  This command should then be copied from the Console and pasted into your R script in the Script Editor so that, in the future, you can set the working directory by submitting the \R{setwd()} command rather than using the menu options (which requires user interaction with RStudio).  I set the working directory for \textbf{MY COMPUTER} below.

<<eval=FALSE>>=
setwd("C:/aaaWork/Web/fishR/courses/Midwest2012/CourseMaterial/")
@

\subsubsection*{Reading External Text (Tab-Delimited) Files}
<<>>=
ex1a <- read.table("Example1.txt",header=TRUE,sep="\t")
str(ex1a)
ex1a
@

\newpage
\subsubsection*{Reading External CSV (comman-separated-values) Files}
<<>>=
ex1b <- read.csv("Example1.csv")
str(ex1b)
@


\subsection{Working With Data Frames}
\subsubsection*{Seeing Entire Data Frame}
One can examine the entire data frame by either typing the name of the data frame (as illustrated above for \R{ex1a}) or opening it in RStudio.  To open the dataframe, locate and then double-click on the name of the dataframe in the \emph{Workspace} pane (upper-right pane).  This will open the dataframe in a tab in the \emph{Script Editor} window.

\begin{center}
  \includegraphics[width=4in]{Figs/SeeData1.png}
\end{center}


\subsubsection*{Accessing Portions of the Entire Data Frame}
<<>>=
ex1a[2,]
ex1a[,2]
ex1a$tl
ex1a$w
ex1a$w[2]
ex1a$w[-2]
@

\newpage
\subsubsection*{Subsetting Data Frames}
<<>>=
( ex1a.1 <- Subset(ex1a,segment=="Down") )
@
<<>>=
( ex1a.2 <- Subset(ex1a,species!="BKT") )
@
<<>>=
( ex1a.3 <- Subset(ex1a,tl<50) )
@
<<>>=
( ex1a.4 <- Subset(ex1a,tl<50 & species=="SLS") )
@
<<>>=
( ex1a.5 <- Subset(ex1a,tl<50 | w>20) )
@

\newpage
\subsubsection*{Creating New Variables in a Data Frame}
<<>>=
str(ex1a)
ex1a$tl.in <- ex1a$tl/25.4
ex1a$w.lbs <- ex1a$w/454
str(ex1a)
@

<<>>=
ex1a <- lencat(~tl,data=ex1a,breaks=c(40,75,125,175))
str(ex1a)
view(ex1a)
@

<<echo=FALSE, results='hide', message=FALSE>>=
swvCode("01_Terminology.rnw",moreItems="set_parent")
@

\end{document}